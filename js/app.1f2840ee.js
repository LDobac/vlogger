(function(s){function t(t){for(var n,a,l=t[0],p=t[1],o=t[2],i=0,u=[];i<l.length;i++)a=l[i],Object.prototype.hasOwnProperty.call(c,a)&&c[a]&&u.push(c[a][0]),c[a]=0;for(n in p)Object.prototype.hasOwnProperty.call(p,n)&&(s[n]=p[n]);d&&d(t);while(u.length)u.shift()();return r.push.apply(r,o||[]),e()}function e(){for(var s,t=0;t<r.length;t++){for(var e=r[t],n=!0,a=1;a<e.length;a++){var l=e[a];0!==c[l]&&(n=!1)}n&&(r.splice(t--,1),s=p(p.s=e[0]))}return s}var n={},a={app:0},c={app:0},r=[];function l(s){return p.p+"js/"+({post_view:"post_view"}[s]||s)+"."+{post_view:"319a52a4"}[s]+".js"}function p(t){if(n[t])return n[t].exports;var e=n[t]={i:t,l:!1,exports:{}};return s[t].call(e.exports,e,e.exports,p),e.l=!0,e.exports}p.e=function(s){var t=[],e={post_view:1};a[s]?t.push(a[s]):0!==a[s]&&e[s]&&t.push(a[s]=new Promise((function(t,e){for(var n="css/"+({post_view:"post_view"}[s]||s)+"."+{post_view:"bbaf5dcc"}[s]+".css",c=p.p+n,r=document.getElementsByTagName("link"),l=0;l<r.length;l++){var o=r[l],i=o.getAttribute("data-href")||o.getAttribute("href");if("stylesheet"===o.rel&&(i===n||i===c))return t()}var u=document.getElementsByTagName("style");for(l=0;l<u.length;l++){o=u[l],i=o.getAttribute("data-href");if(i===n||i===c)return t()}var d=document.createElement("link");d.rel="stylesheet",d.type="text/css",d.onload=t,d.onerror=function(t){var n=t&&t.target&&t.target.src||c,r=new Error("Loading CSS chunk "+s+" failed.\n("+n+")");r.code="CSS_CHUNK_LOAD_FAILED",r.request=n,delete a[s],d.parentNode.removeChild(d),e(r)},d.href=c;var b=document.getElementsByTagName("head")[0];b.appendChild(d)})).then((function(){a[s]=0})));var n=c[s];if(0!==n)if(n)t.push(n[2]);else{var r=new Promise((function(t,e){n=c[s]=[t,e]}));t.push(n[2]=r);var o,i=document.createElement("script");i.charset="utf-8",i.timeout=120,p.nc&&i.setAttribute("nonce",p.nc),i.src=l(s);var u=new Error;o=function(t){i.onerror=i.onload=null,clearTimeout(d);var e=c[s];if(0!==e){if(e){var n=t&&("load"===t.type?"missing":t.type),a=t&&t.target&&t.target.src;u.message="Loading chunk "+s+" failed.\n("+n+": "+a+")",u.name="ChunkLoadError",u.type=n,u.request=a,e[1](u)}c[s]=void 0}};var d=setTimeout((function(){o({type:"timeout",target:i})}),12e4);i.onerror=i.onload=o,document.head.appendChild(i)}return Promise.all(t)},p.m=s,p.c=n,p.d=function(s,t,e){p.o(s,t)||Object.defineProperty(s,t,{enumerable:!0,get:e})},p.r=function(s){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(s,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(s,"__esModule",{value:!0})},p.t=function(s,t){if(1&t&&(s=p(s)),8&t)return s;if(4&t&&"object"===typeof s&&s&&s.__esModule)return s;var e=Object.create(null);if(p.r(e),Object.defineProperty(e,"default",{enumerable:!0,value:s}),2&t&&"string"!=typeof s)for(var n in s)p.d(e,n,function(t){return s[t]}.bind(null,n));return e},p.n=function(s){var t=s&&s.__esModule?function(){return s["default"]}:function(){return s};return p.d(t,"a",t),t},p.o=function(s,t){return Object.prototype.hasOwnProperty.call(s,t)},p.p="/",p.oe=function(s){throw console.error(s),s};var o=window["webpackJsonp"]=window["webpackJsonp"]||[],i=o.push.bind(o);o.push=t,o=o.slice();for(var u=0;u<o.length;u++)t(o[u]);var d=i;r.push([0,"chunk-vendors"]),e()})({0:function(s,t,e){s.exports=e("cd49")},"0e31":function(s,t,e){},"14b9":function(s){s.exports=JSON.parse('[{"uid":1,"title":"LeetCode - 1. Two Sum","summery":"","thumbnail":"","date":"2021-10-24T22:10:27.000+00:00","series":1,"tags":[1,2,3],"originFile":"2021-10-24-leet_code_1.md","htmlFileName":"2021-10-24-leet_code_1.json","htmlFilePath":"/home/runner/work/vlogger/vlogger/src/assets/.build/build_posts/2021-10-24-leet_code_1.json","mtime":1635094283363.3538}]')},"1b53":function(s,t,e){},"1d16":function(s,t,e){},"2b22":function(s,t,e){"use strict";e("6683")},3617:function(s,t,e){"use strict";e.d(t,"c",(function(){return O})),e.d(t,"b",(function(){return k})),e.d(t,"d",(function(){return C})),e.d(t,"a",(function(){return E}));var n=e("7a23"),a=e("ea47"),c=e.n(a),r=Object(n["F"])("data-v-447bff31");Object(n["t"])("data-v-447bff31");var l={class:"header"},p=Object(n["g"])("div",{class:"profile-image"},[Object(n["g"])("img",{src:c.a,alt:"My Profile Image"})],-1),o={class:"title"},i=Object(n["f"])(" Jaehee "),u=Object(n["g"])("p",{class:"description"}," HI! ",-1),d={class:"nav-menu"},b=Object(n["f"])("Home"),j=Object(n["f"])("About"),h=Object(n["g"])("a",{href:"https://github.com/LDobac",target:"_blank",class:"nav-item"},"Github",-1),f=Object(n["g"])("a",{href:"https://www.instagram.com/jaehee24_/",target:"_blank",class:"nav-item"},"Instagram",-1);Object(n["r"])();var m=r((function(s,t,e,a,c,m){var g=Object(n["y"])("router-link");return Object(n["q"])(),Object(n["d"])("header",l,[p,Object(n["g"])("h1",o,[Object(n["g"])(g,{to:"/"},{default:r((function(){return[i]})),_:1}),u]),Object(n["g"])("nav",d,[Object(n["g"])(g,{to:"/",class:"nav-item"},{default:r((function(){return[b]})),_:1}),Object(n["g"])(g,{to:"/about",class:"nav-item"},{default:r((function(){return[j]})),_:1}),h,f])])})),g=Object(n["h"])({name:"Header",setup:function(){}});e("4adc");g.render=m,g.__scopeId="data-v-447bff31";var O=g,v=Object(n["F"])("data-v-3a4c6208");Object(n["t"])("data-v-3a4c6208");var y={class:"footer"};Object(n["r"])();var _=v((function(s,t,e,a,c,r){return Object(n["q"])(),Object(n["d"])("footer",y," Copyright 2021 by Jaehee All rights reserved. ")})),w=Object(n["h"])({name:"Footer"});e("59e6");w.render=_,w.__scopeId="data-v-3a4c6208";var k=w,x=e("e1c4"),M=e.n(x),S=Object(n["F"])("data-v-41258d0c");Object(n["t"])("data-v-41258d0c");var P={class:"side-menu"},q=Object(n["g"])("div",{class:"card"},[Object(n["g"])("p",null,"아직 별 넣을 내용이 없읍니다."),Object(n["g"])("br"),Object(n["g"])("p",null,"귀여운 저희 집 고양이나 봐주세요"),Object(n["g"])("img",{src:M.a})],-1);Object(n["r"])();var F=S((function(s,t,e,a,c,r){return Object(n["q"])(),Object(n["d"])("aside",P,[q])})),I=Object(n["h"])({name:"LeftSideMenu"});e("adc8");I.render=F,I.__scopeId="data-v-41258d0c";var C=I,L=Object(n["F"])("data-v-41965791");Object(n["t"])("data-v-41965791");var A={class:"date"};Object(n["r"])();var N=L((function(s,t,e,a,c,r){return Object(n["q"])(),Object(n["d"])("p",A,"📅 "+Object(n["A"])(s.formattedDate),1)})),T=e("5a0c"),B=e.n(T),D=Object(n["h"])({name:"FormattedDate",props:{date:{type:[String,Object]}},setup:function(s){var t=Object(n["B"])(s),e=t.date,a=Object(n["b"])((function(){return"string"==typeof e.value?B()(e.value).format("YYYY년 MM월 DD일"):e.value.format("YYYY년 MM월 DD일")}));return{formattedDate:a}}});e("b4fe");D.render=N,D.__scopeId="data-v-41965791";var E=D},3715:function(s,t,e){"use strict";e("3d3e")},"3d3e":function(s,t,e){},"3e94":function(s,t,e){s.exports=e.p+"img/귀여운_고양이_2.7dda7633.jpg"},"4adc":function(s,t,e){"use strict";e("67b6")},"4eaf":function(s,t,e){"use strict";e("0e31")},"58a7":function(s,t,e){"use strict";e.d(t,"a",(function(){return l}));var n=e("7a23");function a(s,t,e,a,c,r){var l=Object(n["y"])("LeftSideMenu");return Object(n["q"])(),Object(n["d"])(n["a"],null,[Object(n["g"])(l),Object(n["x"])(s.$slots,"default")],64)}var c=e("3617"),r=Object(n["h"])({name:"ContentWithSideMenuLayout",components:{LeftSideMenu:c["d"]}});r.render=a;var l=r},5938:function(s,t,e){"use strict";e("9c2e")},"59e6":function(s,t,e){"use strict";e("793b")},"5e6b":function(s,t,e){},6683:function(s,t,e){},"67b6":function(s,t,e){},"793b":function(s,t,e){},"7e73":function(s,t,e){"use strict";e.d(t,"c",(function(){return p})),e.d(t,"a",(function(){return b})),e.d(t,"b",(function(){return _}));e("b0c0");var n=e("7a23"),a=Object(n["F"])("data-v-61c7223c");Object(n["t"])("data-v-61c7223c");var c={class:"tags-wrap"};Object(n["r"])();var r=a((function(s,t,e,r,l,p){var o=Object(n["y"])("router-link");return Object(n["q"])(),Object(n["d"])("div",c,[(Object(n["q"])(!0),Object(n["d"])(n["a"],null,Object(n["w"])(s.tags,(function(s){return Object(n["q"])(),Object(n["d"])(o,{class:"rounded-button tag",key:s.id,to:{path:"/",query:{tag:s.id}}},{default:a((function(){return[Object(n["f"])(" # "+Object(n["A"])(s.name),1)]})),_:2},1032,["to"])})),128))])})),l=Object(n["h"])({name:"TagsView",props:{tags:{type:Object}},setup:function(){var s=function(s){console.log(s)};return{onButtonClick:s}}});e("5938");l.render=r,l.__scopeId="data-v-61c7223c";var p=l,o=Object(n["F"])("data-v-52d68690");Object(n["t"])("data-v-52d68690");var i={key:0,class:"series-wrap"};Object(n["r"])();var u=o((function(s,t,e,a,c,r){var l=Object(n["y"])("router-link");return s.series?(Object(n["q"])(),Object(n["d"])("span",i,[Object(n["g"])(l,{class:"series",to:{path:"/",query:{series:s.series.id}}},{default:o((function(){return[Object(n["f"])(Object(n["A"])(s.series.name),1)]})),_:1},8,["to"])])):Object(n["e"])("",!0)})),d=Object(n["h"])({props:{series:{type:Object}}});e("2b22");d.render=u,d.__scopeId="data-v-52d68690";var b=d,j=Object(n["F"])("data-v-d6aa614c");Object(n["t"])("data-v-d6aa614c");var h={class:"series-navigator"},f=Object(n["g"])("p",{class:"bold"},"이전",-1),m={key:1},g=Object(n["g"])("p",{class:"bold"},"다음",-1),O={key:3};Object(n["r"])();var v=j((function(s,t,e,a,c,r){var l=Object(n["y"])("router-link");return Object(n["q"])(),Object(n["d"])("div",h,[s.siblingSeriesPost.prev.id?(Object(n["q"])(),Object(n["d"])(l,{key:0,class:"prev-button series-button",to:{name:"PostView",params:{id:s.siblingSeriesPost.prev.id}}},{default:j((function(){return[f,Object(n["f"])(" "+Object(n["A"])(s.siblingSeriesPost.prev.title),1)]})),_:1},8,["to"])):(Object(n["q"])(),Object(n["d"])("div",m)),s.siblingSeriesPost.next.id?(Object(n["q"])(),Object(n["d"])(l,{key:2,class:"next-button series-button",to:{name:"PostView",params:{id:s.siblingSeriesPost.next.id}}},{default:j((function(){return[g,Object(n["f"])(" "+Object(n["A"])(s.siblingSeriesPost.next.title),1)]})),_:1},8,["to"])):(Object(n["q"])(),Object(n["d"])("div",O))])})),y=Object(n["h"])({props:{siblingSeriesPost:Object}});e("ecef");y.render=v,y.__scopeId="data-v-d6aa614c";var _=y},"948d":function(s,t,e){},"9c2e":function(s,t,e){},a050:function(s,t,e){"use strict";e("f4e4")},a682:function(s,t,e){},adc8:function(s,t,e){"use strict";e("1b53")},adeb:function(s,t,e){"use strict";e("1d16")},b4fe:function(s,t,e){"use strict";e("a682")},baca:function(s){s.exports=JSON.parse('{"content":"<h2 id=\\"leetcode---1-two-sum\\">LeetCode - 1. Two Sum</h2>\\n<p>문제 - <a href=\\"https://leetcode.com/problems/two-sum/\\">LeetCode 1. Two Sun</a></p>\\n<h2 id=\\"문제-설명\\">문제 설명</h2>\\n<p>LeetCode의 1번 문제인 Two Sum은 정수형 배열과 target 숫자를 입력받습니다. 그리고 정수형 배열 내 숫자들을 이용해 target 숫자를 만들 수 있는 숫자 2개를 찾아 index를 반환하는 문제입니다.</p>\\n<p>답은 <strong>정확히 하나만</strong> 존재하며 같은 원소는 사용하지 않습니다.</p>\\n<p>난이도는 <code>EASY</code> 난이도 입니다.</p>\\n<h2 id=\\"풀이\\">풀이</h2>\\n<h3 id=\\"solution-1---brute-force\\">Solution 1 - Brute force</h3>\\n<p>첫 번째로 떠올린 방법은 Brute force, 무차별 대입 방법입니다. 단순히 배열을 모두 순회하면서 두 숫자를 더했을 때 target 숫자와 동일한 index 두 개를 찾는 방법입니다.</p>\\n<pre><code class=\\"language-c++\\"><span class=\\"hljs-keyword\\">for</span> (<span class=\\"hljs-type\\">int</span> x = <span class=\\"hljs-number\\">0</span> ; x &lt; nums.<span class=\\"hljs-built_in\\">size</span>() ; x++)\\n{\\n    <span class=\\"hljs-keyword\\">for</span> (<span class=\\"hljs-type\\">int</span> y = x + <span class=\\"hljs-number\\">1</span> ; y &lt; nums.<span class=\\"hljs-built_in\\">size</span>() ; y++)\\n    {\\n        <span class=\\"hljs-type\\">int</span> sumResult = nums[x] + nums[y];\\n\\n        <span class=\\"hljs-keyword\\">if</span> (target == sumResult)\\n        {\\n            <span class=\\"hljs-keyword\\">return</span> std::vector&lt;<span class=\\"hljs-type\\">int</span>&gt;{x, y};\\n        }\\n    }\\n\\n    <span class=\\"hljs-keyword\\">return</span> std::<span class=\\"hljs-built_in\\">vector</span>&lt;<span class=\\"hljs-type\\">int</span>&gt;();\\n}\\n</code></pre>\\n<p>정말 심플합니다. 단순히 이중 반복문을 이용하여 배열을 순회하면서 하나하나 덧셈하여 target과 동일한 결과의 index를 반환합니다.</p>\\n<p>다만 특별한점이라면 내부의 중첩된 반복문은 <code>x + 1</code>번째부터 시작하는데, 이는 문제에 적혀있던 같은 원소를 사용하지 않기 때문이며 그리고 숫자를 더할 때 <code>x + y</code>나 <code>y + x</code>의 결과는 동일하기 때문에 중복된 case를 수행하지 않게 하기 위함입니다.</p>\\n<h4 id=\\"제출-결과\\">제출 결과</h4>\\n<p><img src=\\"/assets/images/leet_code/two_sum/sol1_result.png\\" alt=\\"Solution 1 result\\"></p>\\n<p>실행 시간은 <code>463ms</code> 메모리는 <code>9.9MB</code>사용하였다. 테스트 케이스가 55개밖에 안되는데 사실상 0.5초가량 걸렸습니다.</p>\\n<p>O(n^2)의 코드이기 때문에 그닥 빠른 알고리즘은 아니란걸 알 수 있습니다.</p>\\n<details>\\n<summary>코드 전문</summary>\\n    \\n<pre><code class=\\"language-c++\\"><span class=\\"hljs-meta\\">#<span class=\\"hljs-keyword\\">include</span> <span class=\\"hljs-string\\">&lt;iostream&gt;</span></span>\\n<span class=\\"hljs-meta\\">#<span class=\\"hljs-keyword\\">include</span> <span class=\\"hljs-string\\">&lt;vector&gt;</span></span>\\n<span class=\\"hljs-meta\\">#<span class=\\"hljs-keyword\\">include</span> <span class=\\"hljs-string\\">&lt;string&gt;</span></span>\\n<span class=\\"hljs-meta\\">#<span class=\\"hljs-keyword\\">include</span> <span class=\\"hljs-string\\">&lt;tuple&gt;</span></span>\\n\\n<span class=\\"hljs-keyword\\">class</span> <span class=\\"hljs-title class_\\">Solution</span>\\n{\\n<span class=\\"hljs-keyword\\">public</span>:\\n    <span class=\\"hljs-function\\">std::vector&lt;<span class=\\"hljs-type\\">int</span>&gt; <span class=\\"hljs-title\\">Answer</span><span class=\\"hljs-params\\">(std::vector&lt;<span class=\\"hljs-type\\">int</span>&gt;&amp; nums, <span class=\\"hljs-type\\">int</span> target)</span>\\n    </span>{\\n        <span class=\\"hljs-keyword\\">for</span> (<span class=\\"hljs-type\\">int</span> x = <span class=\\"hljs-number\\">0</span> ; x &lt; nums.<span class=\\"hljs-built_in\\">size</span>() ; x++)\\n        {\\n            <span class=\\"hljs-keyword\\">for</span> (<span class=\\"hljs-type\\">int</span> y = x + <span class=\\"hljs-number\\">1</span> ; y &lt; nums.<span class=\\"hljs-built_in\\">size</span>() ; y++)\\n            {\\n                <span class=\\"hljs-type\\">int</span> sumResult = nums[x] + nums[y];\\n\\n                <span class=\\"hljs-keyword\\">if</span> (target == sumResult)\\n                {\\n                    <span class=\\"hljs-keyword\\">return</span> std::vector&lt;<span class=\\"hljs-type\\">int</span>&gt;{x, y};\\n                }\\n            }\\n        }\\n\\n        <span class=\\"hljs-keyword\\">return</span> std::<span class=\\"hljs-built_in\\">vector</span>&lt;<span class=\\"hljs-type\\">int</span>&gt;();\\n    }\\n};\\n\\n\\n<span class=\\"hljs-function\\"><span class=\\"hljs-type\\">int</span> <span class=\\"hljs-title\\">main</span><span class=\\"hljs-params\\">(<span class=\\"hljs-type\\">void</span>)</span>\\n</span>{\\n    Solution sol;\\n\\n    std::vector&lt;std::tuple&lt;std::vector&lt;<span class=\\"hljs-type\\">int</span>&gt;, <span class=\\"hljs-type\\">int</span>&gt;&gt; problems {\\n        std::<span class=\\"hljs-built_in\\">make_tuple</span>(std::vector&lt;<span class=\\"hljs-type\\">int</span>&gt;{<span class=\\"hljs-number\\">2</span>, <span class=\\"hljs-number\\">7</span>, <span class=\\"hljs-number\\">11</span>, <span class=\\"hljs-number\\">15</span>}, <span class=\\"hljs-number\\">9</span>),\\n        std::<span class=\\"hljs-built_in\\">make_tuple</span>(std::vector&lt;<span class=\\"hljs-type\\">int</span>&gt;{<span class=\\"hljs-number\\">3</span>, <span class=\\"hljs-number\\">2</span> ,<span class=\\"hljs-number\\">4</span>}, <span class=\\"hljs-number\\">6</span>),\\n        std::<span class=\\"hljs-built_in\\">make_tuple</span>(std::vector&lt;<span class=\\"hljs-type\\">int</span>&gt;{<span class=\\"hljs-number\\">3</span>, <span class=\\"hljs-number\\">3</span>}, <span class=\\"hljs-number\\">6</span>)\\n    };\\n\\n    <span class=\\"hljs-keyword\\">for</span> (<span class=\\"hljs-keyword\\">auto</span> problem : problems)\\n    {\\n        <span class=\\"hljs-keyword\\">auto</span> answer = sol.<span class=\\"hljs-built_in\\">Answer</span>(std::<span class=\\"hljs-built_in\\">get</span>&lt;<span class=\\"hljs-number\\">0</span>&gt;(problem), std::<span class=\\"hljs-built_in\\">get</span>&lt;<span class=\\"hljs-number\\">1</span>&gt;(problem));\\n\\n        <span class=\\"hljs-keyword\\">for</span> (<span class=\\"hljs-type\\">int</span> num : answer)\\n        {\\n            std::cout &lt;&lt; num &lt;&lt; <span class=\\"hljs-string\\">&quot; &quot;</span>;\\n        }\\n        std::cout &lt;&lt; std::endl;\\n    }\\n\\n}\\n</code></pre>\\n</details>\\n\\n<h3 id=\\"solution-2---hash-table\\">Solution 2 - Hash table</h3>\\n<p><img src=\\"/assets/images/leet_code/two_sum/follow_up.png\\" alt=\\"Follow-up\\"></p>\\n<p>첫 번째 해결책은 O(n^2)의 코드이므로 이보다 더 빠른 해결책을 제시해보겠습니다.</p>\\n<p>첫 번째 방법의 문제점은 중첩된 반복문의 사용이며, 하나의 x를 정해 target에 맞는 y를 계속 찾는 방법입니다. 즉, 반복문이 돌며 x가 바뀌면 이전에 계산했던 모든 <code>x + y</code>의 계산 결과는 없어지며 새로운 x를 정해 다시 y를 찾아가는 여행을 떠나야 되게 됩니다.</p>\\n<p>여기서 생각을 바꾸어 이전에 나왔던 x를 별도의 메모리에 저장하여 <code>diff = target - x</code>를 수행하여 <code>diff</code>에 해당 하는 값이 이전에 등장한 적이 있다면 <code>diff + x = target</code>이 되므로 결국 diff와 x의 index를 반환하면 됩니다. 이렇게 되면 순회가 단 한번만 발생하니 O(n)이 됩니다.</p>\\n<p>그런데 여기서 또 발생하는 문제점은 x를 메모리에 저장한 후에 diff와 동일한 값을 찾을 때 저장한 공간을 순회해야 합니다. 만약 1차원 배열이라면 O(n)의 순회 시간이 발생할 것이며 즉, 결국 O(n^2)랑 차이가 없게되죠.</p>\\n<p>이를 해결하기 위해 일반 배열이 아닌 Hash Table을 사용합니다. Hash table은 Hash 함수를 key를 hash화 하여 저장할 index를 계산해 저장하는 방식이기 때문에 탐색과 삽입이 O(1)이 됩니다.</p>\\n<pre><code class=\\"language-c++\\"><span class=\\"hljs-comment\\">//                num, index</span>\\nstd::unordered_map&lt;<span class=\\"hljs-type\\">int</span>, <span class=\\"hljs-type\\">int</span>&gt; table;\\n\\n<span class=\\"hljs-keyword\\">for</span> (<span class=\\"hljs-type\\">int</span> x = <span class=\\"hljs-number\\">0</span> ; x &lt; nums.<span class=\\"hljs-built_in\\">size</span>() ; x++)\\n{\\n    <span class=\\"hljs-type\\">int</span> diff = target - nums[x];\\n\\n    <span class=\\"hljs-keyword\\">auto</span> search = table.<span class=\\"hljs-built_in\\">find</span>(diff);\\n    <span class=\\"hljs-keyword\\">if</span> (search != table.<span class=\\"hljs-built_in\\">end</span>())\\n    {\\n        <span class=\\"hljs-keyword\\">return</span> std::vector&lt;<span class=\\"hljs-type\\">int</span>&gt;{x, search-&gt;second};\\n    }\\n\\n    table.<span class=\\"hljs-built_in\\">insert</span>(std::<span class=\\"hljs-built_in\\">make_pair</span>(nums[x], x));\\n}\\n\\n<span class=\\"hljs-keyword\\">return</span> std::<span class=\\"hljs-built_in\\">vector</span>&lt;<span class=\\"hljs-type\\">int</span>&gt;();\\n</code></pre>\\n<p>C++의 <a href=\\"https://en.cppreference.com/w/cpp/container/unordered_map\\">unordered_map</a>은 key-value형태의 컨테이너이며 상수 시간내에 삽입, 삭제, 탐색, 비교가 이루어지는 자료구조 즉, Hash table입니다.</p>\\n<p>먼저 <code>diff = target - nums[x]</code>를 통해 target에 x를 빼면 남는 값 diff가 이미 등장한 적이 있는지 확인합니다.\\n만약 있다면 등장했었던 그 값의 index와 현재 x의 index를 반환하기만 하면 됩니다.</p>\\n<p>매우 간단하지만, 기존의 O(n^2) 코드에 비교하면 O(n)이므로 속도 향상이 매우 많이 이루어졌을 것이라고 생각됩니다.</p>\\n<h4 id=\\"제출-결과-1\\">제출 결과</h4>\\n<p><img src=\\"/assets/images/leet_code/two_sum/sol2_result.png\\" alt=\\"Solution 2 result\\"></p>\\n<p>기존의 약 <code>500ms</code>의 속도에서 <code>7ms</code>의 속도로 70배 가까이 향상되었습니다. 다만 별도의 저장 공간을 사용했기에 메모리의 크기가 <code>9.9MB</code>에서 <code>10.7MB</code>로 증가했습니다.</p>\\n<details>\\n    <summary>코드 전문</summary>\\n\\n<pre><code class=\\"language-c++\\"><span class=\\"hljs-meta\\">#<span class=\\"hljs-keyword\\">include</span> <span class=\\"hljs-string\\">&lt;iostream&gt;</span></span>\\n<span class=\\"hljs-meta\\">#<span class=\\"hljs-keyword\\">include</span> <span class=\\"hljs-string\\">&lt;vector&gt;</span></span>\\n<span class=\\"hljs-meta\\">#<span class=\\"hljs-keyword\\">include</span> <span class=\\"hljs-string\\">&lt;string&gt;</span></span>\\n<span class=\\"hljs-meta\\">#<span class=\\"hljs-keyword\\">include</span> <span class=\\"hljs-string\\">&lt;tuple&gt;</span></span>\\n<span class=\\"hljs-meta\\">#<span class=\\"hljs-keyword\\">include</span> <span class=\\"hljs-string\\">&lt;unordered_map&gt;</span></span>\\n\\n<span class=\\"hljs-keyword\\">class</span> <span class=\\"hljs-title class_\\">Solution</span>\\n{\\n<span class=\\"hljs-keyword\\">public</span>:\\n    <span class=\\"hljs-function\\">std::vector&lt;<span class=\\"hljs-type\\">int</span>&gt; <span class=\\"hljs-title\\">Answer</span><span class=\\"hljs-params\\">(std::vector&lt;<span class=\\"hljs-type\\">int</span>&gt;&amp; nums, <span class=\\"hljs-type\\">int</span> target)</span>\\n    </span>{\\n        <span class=\\"hljs-comment\\">//                num, index</span>\\n        std::unordered_map&lt;<span class=\\"hljs-type\\">int</span>, <span class=\\"hljs-type\\">int</span>&gt; table;\\n\\n        <span class=\\"hljs-keyword\\">for</span> (<span class=\\"hljs-type\\">int</span> x = <span class=\\"hljs-number\\">0</span> ; x &lt; nums.<span class=\\"hljs-built_in\\">size</span>() ; x++)\\n        {\\n            <span class=\\"hljs-type\\">int</span> diff = target - nums[x];\\n\\n            <span class=\\"hljs-keyword\\">auto</span> search = table.<span class=\\"hljs-built_in\\">find</span>(diff);\\n            <span class=\\"hljs-keyword\\">if</span> (search != table.<span class=\\"hljs-built_in\\">end</span>())\\n            {\\n                <span class=\\"hljs-keyword\\">return</span> std::vector&lt;<span class=\\"hljs-type\\">int</span>&gt;{x, search-&gt;second};\\n            }\\n\\n            table.<span class=\\"hljs-built_in\\">insert</span>(std::<span class=\\"hljs-built_in\\">make_pair</span>(nums[x], x));\\n        }\\n\\n        <span class=\\"hljs-keyword\\">return</span> std::<span class=\\"hljs-built_in\\">vector</span>&lt;<span class=\\"hljs-type\\">int</span>&gt;();\\n    }\\n};\\n\\n\\n<span class=\\"hljs-function\\"><span class=\\"hljs-type\\">int</span> <span class=\\"hljs-title\\">main</span><span class=\\"hljs-params\\">(<span class=\\"hljs-type\\">void</span>)</span>\\n</span>{\\n    Solution sol;\\n\\n    std::vector&lt;std::tuple&lt;std::vector&lt;<span class=\\"hljs-type\\">int</span>&gt;, <span class=\\"hljs-type\\">int</span>&gt;&gt; problems {\\n        std::<span class=\\"hljs-built_in\\">make_tuple</span>(std::vector&lt;<span class=\\"hljs-type\\">int</span>&gt;{<span class=\\"hljs-number\\">2</span>, <span class=\\"hljs-number\\">7</span>, <span class=\\"hljs-number\\">11</span>, <span class=\\"hljs-number\\">15</span>}, <span class=\\"hljs-number\\">9</span>),\\n        std::<span class=\\"hljs-built_in\\">make_tuple</span>(std::vector&lt;<span class=\\"hljs-type\\">int</span>&gt;{<span class=\\"hljs-number\\">3</span>, <span class=\\"hljs-number\\">2</span> ,<span class=\\"hljs-number\\">4</span>}, <span class=\\"hljs-number\\">6</span>),\\n        std::<span class=\\"hljs-built_in\\">make_tuple</span>(std::vector&lt;<span class=\\"hljs-type\\">int</span>&gt;{<span class=\\"hljs-number\\">3</span>, <span class=\\"hljs-number\\">3</span>}, <span class=\\"hljs-number\\">6</span>)\\n    };\\n\\n    <span class=\\"hljs-keyword\\">for</span> (<span class=\\"hljs-keyword\\">auto</span> problem : problems)\\n    {\\n        <span class=\\"hljs-keyword\\">auto</span> answer = sol.<span class=\\"hljs-built_in\\">Answer</span>(std::<span class=\\"hljs-built_in\\">get</span>&lt;<span class=\\"hljs-number\\">0</span>&gt;(problem), std::<span class=\\"hljs-built_in\\">get</span>&lt;<span class=\\"hljs-number\\">1</span>&gt;(problem));\\n\\n        <span class=\\"hljs-keyword\\">for</span> (<span class=\\"hljs-type\\">int</span> num : answer)\\n        {\\n            std::cout &lt;&lt; num &lt;&lt; <span class=\\"hljs-string\\">&quot; &quot;</span>;\\n        }\\n        std::cout &lt;&lt; std::endl;\\n    }\\n\\n}\\n</code></pre>\\n</details>"}')},cba4:function(s){s.exports=JSON.parse('{"1":{"id":1,"name":"Leet Code","posts":[1]},"2":{"id":2,"name":"easy","posts":[1]},"3":{"id":3,"name":"c++","posts":[1]}}')},cd49:function(s,t,e){"use strict";e.r(t);e("e260"),e("e6cf"),e("cca6"),e("a79d");var n=e("7a23");function a(s,t,e,a,c,r){var l=Object(n["y"])("Header"),p=Object(n["y"])("router-view"),o=Object(n["y"])("Footer");return Object(n["q"])(),Object(n["d"])(n["a"],null,[Object(n["g"])(l),Object(n["g"])(p),Object(n["g"])(o)],64)}var c=e("3617"),r=Object(n["h"])({components:{Header:c["c"],Footer:c["b"]}});e("dcd8");r.render=a;var l=r,p=(e("d3b7"),e("3ca3"),e("ddb0"),e("6c02")),o=e("f7e2"),i=Object(n["F"])("data-v-1e6c83f9");Object(n["t"])("data-v-1e6c83f9");var u={class:"home"};Object(n["r"])();var d=i((function(s,t,e,a,c,r){var l=Object(n["y"])("post-list"),p=Object(n["y"])("ContentWithSideMenu");return Object(n["q"])(),Object(n["d"])(p,null,{default:i((function(){return[s.postFilter.type?(Object(n["q"])(),Object(n["d"])("div",{key:0,class:[s.postFilter.type,"post-filter"]},[Object(n["g"])("p",null,Object(n["A"])(s.selectedFilterName),1)],2)):Object(n["e"])("",!0),Object(n["g"])("main",u,[Object(n["g"])(l,{filter:s.postFilter},null,8,["filter"])])]})),_:1})})),b=(e("b0c0"),e("58a7")),j=Object(n["F"])("data-v-0e07973f");Object(n["t"])("data-v-0e07973f");var h={class:"post-item card"},f={key:0,class:"thumbnail"},m={class:"content"},g={class:"info"},O={class:"post-title"},v={key:0,class:"post-summery"};Object(n["r"])();var y=j((function(s,t,e,a,c,r){var l=Object(n["y"])("SeriesButton"),p=Object(n["y"])("FormattedDate"),o=Object(n["y"])("TagsView"),i=Object(n["y"])("router-link");return Object(n["q"])(),Object(n["d"])(i,{to:{name:"PostView",params:{id:s.post.uid}}},{default:j((function(){return[Object(n["g"])("div",h,[s.post.thumbnail?(Object(n["q"])(),Object(n["d"])("div",f,[Object(n["g"])("img",{src:s.post.thumbnail},null,8,["src"])])):Object(n["e"])("",!0),Object(n["g"])("div",m,[Object(n["g"])("div",g,[Object(n["g"])("h1",O,[Object(n["f"])(Object(n["A"])(s.post.title)+" ",1),s.post.series?(Object(n["q"])(),Object(n["d"])(l,{key:0,series:s.post.series},null,8,["series"])):Object(n["e"])("",!0)]),Object(n["g"])(p,{date:s.post.date},null,8,["date"]),s.post.tags.length>0?(Object(n["q"])(),Object(n["d"])(o,{key:0,class:"tags",tags:s.post.tags},null,8,["tags"])):Object(n["e"])("",!0)]),s.post.summery?(Object(n["q"])(),Object(n["d"])("p",v,Object(n["A"])(s.post.summery),1)):Object(n["e"])("",!0)])])]})),_:1},8,["to"])})),_=e("7e73"),w=Object(n["h"])({name:"PostItem",components:{TagsView:_["c"],SeriesButton:_["a"],FormattedDate:c["a"]},props:{post:{type:Object,required:!0}}});e("ceb9");w.render=y,w.__scopeId="data-v-0e07973f";var k=w,x=Object(n["F"])("data-v-7e2fd040");Object(n["t"])("data-v-7e2fd040");var M={class:"post-list"};Object(n["r"])();var S=x((function(s,t,e,a,c,r){var l=Object(n["y"])("post-item");return Object(n["q"])(),Object(n["d"])("div",M,[(Object(n["q"])(!0),Object(n["d"])(n["a"],null,Object(n["w"])(s.posts,(function(s){return Object(n["q"])(),Object(n["d"])(l,{class:"post-item",key:s.uid,post:s},null,8,["post"])})),128))])})),P=(e("4de4"),Object(n["h"])({name:"PostList",props:{filter:{type:Object}},components:{PostItem:k},setup:function(s){var t=Object(n["i"])(),e=null===t||void 0===t?void 0:t.appContext.config.globalProperties.$postLoader,a=Object(n["b"])((function(){var t;return null!==(t=s.filter)&&void 0!==t&&t.type?e.GetRecentPosts(-1,0,s.filter):e.GetRecentPosts(-1)}));return{posts:a}}}));e("f9f1");P.render=S,P.__scopeId="data-v-7e2fd040";var q=P,F=Object(n["h"])({name:"Home",components:{PostList:q,ContentWithSideMenu:b["a"]},setup:function(){var s=Object(p["c"])(),t=Object(n["u"])({type:"",id:-1}),e=function(s){if(s){var e=s.series,n=s.tag,a=e?"series":n?"tag":"",c=e?parseInt(e):n?parseInt(n):-1;t.type=a,t.id=c}};e(s.query),Object(n["D"])((function(){return s.query}),e);var a=Object(n["i"])(),c=null===a||void 0===a?void 0:a.appContext.config.globalProperties.$postLoader,r=Object(n["b"])((function(){return"series"===t.type?c.seriesMetadata[t.id].name:"tag"===t.type?c.tagsMetadata[t.id].name:""}));return{postFilter:t,selectedFilterName:r}}});e("3715");F.render=d,F.__scopeId="data-v-1e6c83f9";var I=F,C=e("3e94"),L=e.n(C),A=Object(n["F"])("data-v-19c80930");Object(n["t"])("data-v-19c80930");var N={class:"about"},T=Object(n["g"])("div",{class:"card content"},[Object(n["g"])("p",null,"곧 주인장에 대한 설명과 이력 등등이 추가될 예정입니다."),Object(n["g"])("br"),Object(n["g"])("p",null,"추가될 때 까지 귀여운 고양이를 드립니다."),Object(n["g"])("img",{src:L.a})],-1);Object(n["r"])();var B=A((function(s,t){return Object(n["q"])(),Object(n["d"])("div",N,[T])}));e("4eaf");const D={};D.render=B,D.__scopeId="data-v-19c80930";var E=D,H=Object(n["F"])("data-v-62d5e77b");Object(n["t"])("data-v-62d5e77b");var J={class:"page-not-found"},Y=Object(n["g"])("p",null,"404",-1),G=Object(n["g"])("p",null,"Page Not Found",-1);Object(n["r"])();var R=H((function(s,t){return Object(n["q"])(),Object(n["d"])("div",J,[Y,G])}));e("a050");const V={};V.render=R,V.__scopeId="data-v-62d5e77b";var z=V,$=Object(n["F"])("data-v-6f490642");Object(n["t"])("data-v-6f490642");var U={class:"error"},W=Object(n["g"])("p",null,"Error!",-1);Object(n["r"])();var K=$((function(s,t){return Object(n["q"])(),Object(n["d"])("div",U,[W])}));e("adeb");const Q={};Q.render=K,Q.__scopeId="data-v-6f490642";var X=Q,Z=[{path:"/",name:"Home",component:I},{path:"/about",name:"About",component:E},{path:"/post/:id(\\d+)",name:"PostView",component:function(){return e.e("post_view").then(e.bind(null,"7afb"))}},{path:"/:pathMatch(.*)*",name:"NotFound",component:z},{path:"/error",name:"Error",component:X}],ss=Object(p["a"])({history:Object(p["b"])("/"),routes:Z,scrollBehavior:function(s,t,e){return e||(s.hash?{el:s.hash,behavior:"smooth"}:{top:0})}});Object(o["b"])(ss);var ts=ss,es=e("d4ec"),ns=e("bee2"),as=(e("4e82"),e("caad"),e("2532"),e("d81d"),e("fb6a"),e("7db0"),e("c740"),e("5a0c")),cs=e.n(as),rs=function(){function s(t,e){var n,a=this;Object(es["a"])(this,s),this._nextPostId=null,this._prevPostId=null;var c=e.postMetadatas.find((function(s){return s.uid===t}));if(!c)throw new Error("Faild to find post metadata by id");var r=null!==(n=e.seriesMetadata[c.series])&&void 0!==n?n:null,l=c.tags.map((function(s){return e.tagsMetadata[s]}));if(this.postMeta=c,this.seriesMeta=r,this.tagsMeta=l,this.seriesMeta){var p,o,i=this.seriesMeta.posts.findIndex((function(s){return s===a.uid}));this._nextPostId=null!==(p=this.seriesMeta.posts[i+1])&&void 0!==p?p:null,this._prevPostId=null!==(o=this.seriesMeta.posts[i-1])&&void 0!==o?o:null}}return Object(ns["a"])(s,[{key:"uid",get:function(){return this.postMeta.uid}},{key:"title",get:function(){return this.postMeta.title}},{key:"date",get:function(){return cs()(this.postMeta.date)}},{key:"thumbnail",get:function(){return this.postMeta.thumbnail}},{key:"summery",get:function(){return this.postMeta.summery}},{key:"series",get:function(){return this.seriesMeta}},{key:"tags",get:function(){return this.tagsMeta}},{key:"postContent",get:function(){var s=e("e003")("./".concat(this.postMeta.htmlFileName));return s.content}},{key:"nextSeriesId",get:function(){return this._nextPostId}},{key:"prevSeriesId",get:function(){return this._prevPostId}}]),s}(),ls=function(){function s(){Object(es["a"])(this,s),this._postMetadatas=e("14b9"),this._seriesMetadata=e("fb39"),this._tagsMetadata=e("cba4")}return Object(ns["a"])(s,[{key:"postMetadatas",get:function(){return this._postMetadatas}},{key:"seriesMetadata",get:function(){return this._seriesMetadata}},{key:"tagsMetadata",get:function(){return this._tagsMetadata}},{key:"GetRecentPosts",value:function(){var s=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:10,e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=this.postMetadatas.sort((function(s,t){return s.date==t.date?0:s.date>t.date?-1:1}));return n&&(a=a.filter((function(s){return"series"==n.type?n.id===s.series:"tag"==n.type?s.tags.includes(n.id):void 0}))),-1==t?a.map((function(t){return new rs(t.uid,s)})):a.slice(e,t).map((function(t){return new rs(t.uid,s)}))}},{key:"GetPostById",value:function(s){try{var t=new rs(s,this);return t}catch(e){return console.log(e),null}}}]),s}();e("f20b");cs.a.locale("ko");var ps=Object(n["c"])(l);ps.config.globalProperties.$postLoader=new ls,ps.use(ts).use(o["a"],{property:{id:"G-BLG37NTK4J"}}).mount("#app")},ceb9:function(s,t,e){"use strict";e("edd8")},dcd8:function(s,t,e){"use strict";e("5e6b")},e003:function(s,t,e){var n={"./2021-10-24-leet_code_1":"baca","./2021-10-24-leet_code_1.json":"baca"};function a(s){var t=c(s);return e(t)}function c(s){if(!e.o(n,s)){var t=new Error("Cannot find module '"+s+"'");throw t.code="MODULE_NOT_FOUND",t}return n[s]}a.keys=function(){return Object.keys(n)},a.resolve=c,s.exports=a,a.id="e003"},e1c4:function(s,t,e){s.exports=e.p+"img/귀여운_고양이_1.dfb645d4.jpg"},ea47:function(s,t,e){s.exports=e.p+"img/profile_image.d79e9dd8.png"},ecef:function(s,t,e){"use strict";e("eeac")},edd8:function(s,t,e){},eeac:function(s,t,e){},f4e4:function(s,t,e){},f9f1:function(s,t,e){"use strict";e("948d")},fb39:function(s){s.exports=JSON.parse('{"1":{"id":1,"name":"LeetCode","posts":[1]}}')}});
//# sourceMappingURL=app.1f2840ee.js.map