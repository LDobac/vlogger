"use strict";(self["webpackChunkvlogger"]=self["webpackChunkvlogger"]||[]).push([[374],{3884:function(s){s.exports=JSON.parse('{"content":"<h2 id=\\"leetcode---24-swap-nodes-in-pairs\\">LeetCode - 24. Swap Nodes in Pairs</h2>\\n<p>문제 - <a href=\\"https://leetcode.com/problems/swap-nodes-in-pairs/\\">LeetCode - 24. Swap Nodes in Pairs</a></p>\\n<h2 id=\\"문제-설명\\">문제 설명</h2>\\n<p>연결 리스트가 주어지면 근접한 한 노드와 짝을 지어 두 노드를 swap 합니다. 이때 노드의 값을 변경하는 것은 허락되지 않고 오직 노드의 next 포인터만 수정가능합니다.</p>\\n<p><img src=\\"/assets/images/leet_code/24/example_1.png\\" alt=\\"Solution 1 result\\"></p>\\n<p>위 이미지와 같이 한 쌍의 노드를 swap합니다.</p>\\n<p>난이도는 <code>MEDIUM</code> 난이도 입니다.</p>\\n<h2 id=\\"풀이\\">풀이</h2>\\n<p><a href=\\"https://github.com/LDobac/leetcode/tree/master/14.%20Longest%20Common%20Prefix\\">My Solutions(Github)</a></p>\\n<h3 id=\\"solution\\">Solution</h3>\\n<p>사실 난이도가 medium으로 측정되어 있지만, 단순히 두 연결 리스트의 next 포인터를 swap만 하면 되는 문제입니다.</p>\\n<p>일반적으로 맨 처음 컴퓨터 언어에 대한 tutorial에서 두 변수를 swap하는 예제와 상당히 유사합니다.</p>\\n<p>다만 차이점이라면 순방향 연결 리스트이기 때문에 약간의 처리가 필요합니다.</p>\\n<pre><code class=\\"language-c++\\"><span class=\\"hljs-keyword\\">while</span> (left &amp;&amp; right)\\n{\\n    <span class=\\"hljs-comment\\">// 일반적인 변수 swap 코드</span>\\n    ListNode* tmp = right-&gt;next;\\n\\n    right-&gt;next = left;\\n    left-&gt;next = tmp;\\n\\n    <span class=\\"hljs-comment\\">// 현재 swap하는 노드의 previous 노드의 next를 연결한다.</span>\\n    <span class=\\"hljs-keyword\\">if</span> (prev) prev-&gt;next = right;\\n    prev = left;\\n\\n    <span class=\\"hljs-comment\\">// 첫 순회면 head 포인터를 업데이트한다.</span>\\n    <span class=\\"hljs-keyword\\">if</span> (head == left) head = right;\\n\\n    <span class=\\"hljs-comment\\">// left, right 포인터를 다음 swap할 포인터로 옮긴다.</span>\\n    left = tmp;\\n    <span class=\\"hljs-keyword\\">if</span> (tmp) right = tmp-&gt;next;\\n}\\n</code></pre>\\n<p>실질적인 실행 코드는 단 10줄 가량으로 정리됩니다. 추가적인 설명은 하지 않도록 하겠습니다.</p>\\n<h4 id=\\"제출-결과\\">제출 결과</h4>\\n<p><img src=\\"/assets/images/leet_code/24/result_1.png\\" alt=\\"Solution 1 result\\"></p>\\n<p>난이도가 medium으로 측정된것과 다르게 사실상 easy 난이도나 다름 없었습니다.</p>\\n<p>종종 느끼지만 leetcode에서 측정하는 난이도는 상당히 이상하다고 느껴지는 점이 종종 있는 것 같습니다.</p>\\n<details>\\n<summary>코드 전문</summary>\\n\\n<pre><code class=\\"language-c++\\"><span class=\\"hljs-keyword\\">class</span> <span class=\\"hljs-title class_\\">Solution</span> {\\n<span class=\\"hljs-keyword\\">public</span>:\\n    <span class=\\"hljs-function\\">ListNode* <span class=\\"hljs-title\\">swapPairs</span><span class=\\"hljs-params\\">(ListNode* head)</span> \\n    </span>{\\n        <span class=\\"hljs-keyword\\">if</span> (!head) <span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-literal\\">nullptr</span>;\\n\\n        ListNode* prev = <span class=\\"hljs-literal\\">nullptr</span>;\\n        ListNode* left = head;\\n        ListNode* right = head-&gt;next;\\n\\n        <span class=\\"hljs-keyword\\">while</span> (left &amp;&amp; right)\\n        {\\n            ListNode* tmp = right-&gt;next;\\n\\n            right-&gt;next = left;\\n            left-&gt;next = tmp;\\n\\n            <span class=\\"hljs-keyword\\">if</span> (prev) prev-&gt;next = right;\\n            prev = left;\\n\\n            <span class=\\"hljs-keyword\\">if</span> (head == left) head = right;\\n            \\n            left = tmp;\\n            <span class=\\"hljs-keyword\\">if</span> (tmp) right = tmp-&gt;next;\\n        }\\n        \\n        <span class=\\"hljs-keyword\\">return</span> head;\\n    }\\n};\\n</code></pre>\\n</details>\\n"}')}}]);